<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCatGun</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oGun</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>owner = noone

seconds_between = 0.5
seconds_since_last = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Unique gun variables
shot_type = oCat;
bullet_speed = 600 / room_speed;
bullet_direction = image_angle;
kick_back = 1500 / room_speed;
sound_type = aMeow;


// Gun should destroy itself if player ever dies

if instance_exists(owner) {
    
    // Hide gun sprite once it's picked up
    visible = false;
    
    x = owner.x
    y = owner.y
    image_angle = owner.facing
    seconds_between = 6 / owner.power_current
    
    if owner.weapons_array[owner.selected_weapon_index] == self.id {
    
        /* Shooting */
        var fireButton = mb_left;
        
        //Increment timer
        seconds_since_last += 1/room_speed
        
        //If we're clicking AND we're ready to fire
        if mouse_check_button(fireButton) and (seconds_since_last &gt;= seconds_between) {
            seconds_since_last = 0
            fire_gun(shot_type, bullet_speed, bullet_direction, kick_back, sound_type)        
        }
    }
    
} else {
    
    visible = true;
    
}

can_be_picked_up()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
