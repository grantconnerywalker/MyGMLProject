<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// TODO spawn an additional player to control after the player kills x enemies???

/* Enemy Spawning */
seconds_between_spawns = 1;
seconds_since_last_spawn = 0;


/* Global Constants */
player_bits = 16;
bits_regenerated = 0;

/* Screen Management */

// sets fullscreen
// window_set_fullscreen(true);

// How big is the screen?
// Right now setting to 50% our resolution
screen_width = display_get_width() * 0.5;
screen_height = display_get_height() * 0.5;

// Set size of window (if not full screen)
window_set_size(screen_width, screen_height);

// How much of the room do we want on-screen?
// Multiplying essentially zooms out the view
view_wview = screen_width * 1.2;
view_hview = screen_height * 1.2;

// How much of our screen do we want that to take up?
view_wport = screen_width;
view_hport = screen_height;

// Some thing you just have to do for Game Maker apparently
surface_resize(application_surface, screen_width, screen_height);


/* Game Start */

// Game start sound
audio_play_sound(aGameStart, 1, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Enemy Spawning */
seconds_since_last_spawn += 1/room_speed;

if seconds_since_last_spawn &gt;= seconds_between_spawns {
    // Spawn enemy
    seconds_since_last_spawn = 0;
    if choose(true, false) {
        randomX = random(room_width);
        randomY = choose(0, room_height);
    } else {
        randomX = choose(0, room_width);
        randomY = random(room_height);
    }
    
    // Loop should prevent enemy from spawning on Player
    while instance_exists(instance_place(x,y,oPlayer)) {
        randomX = random(room_width);
        randomY = random(room_height);        
    }
    instance_create(randomX, randomY, choose(oFaceEnemy,oExplodingEnemy,oExplodingEnemy)); // makes oExplodingEnemy 2x as likely to spawn
    
}


/* Quitting */
if keyboard_check_pressed(vk_escape) {
    game_end();
}

/* Restarting */
if keyboard_check_pressed(ord('R')) {
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
