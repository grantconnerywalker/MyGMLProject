<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sLoveGun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oGun</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>owner = noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Gun should destroy itself if player ever dies

if instance_exists(owner) {
    
    // Hide gun sprite once it's picked up
    visible = false;

    x = owner.x
    y = owner.y
    image_angle = owner.image_angle
    default_speed = 1200 / room_speed;
    
    if owner.weapons_array[owner.selected_weapon_index] == self.id {
    
        /* Shooting */
        var fireButton = mb_left;
        
        // mouse_check_button for holding,
        // or you can use mouse_check_button_pressed for "semi auto"
        if mouse_check_button_pressed(fireButton) {
            myBullet = instance_create(x, y, oBullet);
            
            myBullet.speed = default_speed;
            myBullet.direction = image_angle;
            myBullet.image_angle = image_angle;
        
            // Kickback code
                
            kick_back = 1000 / room_speed;
            kick_direction = image_angle + 180
            
            owner.x += lengthdir_x(kick_back, kick_direction);
            owner.y += lengthdir_y(kick_back, kick_direction);
            
            audio_play_sound(aShoot, 1, false);
        
        }
    }
    
} else {
    
    visible = true;
    
}

can_be_picked_up()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
