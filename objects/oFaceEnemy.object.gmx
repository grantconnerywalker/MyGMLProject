<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>initialize_enemy_collision(60, 360)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Facing */

image_angle = direction;
stay_inside_room();
enemy_collision_with_solids()

/* Damage */

if hit_by_projectile() {
    
    audio_play_sound(aEnemyHit,1,false);
    
    // TODO make script for this called damage_standard_enemy()
    
    // Destruction based on sprite type, destroy if happy
    switch (sprite_index) {
        case sEnemy: 
            sprite_index = sEnemy_damaged;
            break;
        case sEnemy_damaged:
            sprite_index = sEnemy_happy;
            break;
        case sEnemy_happy:
        
            // TODO right now making enemies on a timer so just destroy for now
            /* // Create new enemies
            
            // Create legal x range for spawning
            var legalX;
            for (var i=0;i&lt;room_width*0.2;i+=1)
            {
                legalX[i] = i;
            }
            var legalRight;
            for (var i=room_width*0.8;i&lt;room_width;i+=1) {
                legalRight[i] = i;
            }
            // append the legal right to legal X
            for(var i = 0; i &lt; array_length_1d(legalRight); i++) {
                legalX[array_length_1d(legalX)] = legalRight[i];
            }
            
            // Create legal y range for spawning
            var legalY;
            for (var i=0;i&lt;room_height*0.2;i+=1)
            {
                legalY[i] = i;
            }
            var legalBottom;
            for (var i=room_height*0.8;i&lt;room_height;i+=1) {
                legalBottom[i] = i;
            }
            // append the legal bottom to legal Y
            for(var i = 0; i &lt; array_length_1d(legalBottom); i++) {
                legalY[array_length_1d(legalY)] = legalBottom[i];
            }
            

            for (i = 0; i &lt; 2; i +=1) {   
                randomX = random_range(0, array_length_1d(legalX)-1);
                randomY = random_range(0, array_length_1d(legalY)-1);
                if irandom(2) == 2 {
                    instance_create(legalX[randomX], legalY[randomY], oExplodingEnemy);
                }
                instance_create(legalX[randomX], legalY[randomY], oFaceEnemy);
            } */
                        
            // Destroy damaged enemy
            audio_play_sound(aEnemyDefeat,1,false);
            instance_destroy();
    }
    
    // Destruction based on image scale, destroy if small
    /* image_xscale *= 0.8;
    image_yscale *= 0.8;
    if (image_xscale &lt;= 0.6) {
        // Create new enemies
        for (i = 0; i &lt; 2; i +=1) {
            instance_create(random(room_width), random(room_height), oFaceEnemy);   
        }
        
        // Destroy damaged enemy
        instance_destroy();
    }*/
    
    // Destruction based on health, destroy if 0
    /*health -= 1;
    if (health &lt;= 0) {
        instance_destroy();
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
